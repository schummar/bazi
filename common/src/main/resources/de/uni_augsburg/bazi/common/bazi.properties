usage=Usage\:\
  java -jar bazi.jar [-l <locale>] [-if <format>] [-of <format>] [-i <file>] [-o <file>] [<input>]\n\
  \n\
  l\: configures the language (en,de,fr,it,es,...), default\: your system's locale\n\
  if\: the input's format (json,...), default\: json\n\
  of\: the output's format (plain,json,...), default\: plain\n\
  i\: path of the input file, if not specified the last argument is considered the input\n\
  o\: path of the output file, if not specified print to out stream

method.divdwn=DivDwn
method.divgeo=DivGeo
method.divhar=DivHar
method.divpow=DivPow_p\={}
method.divsta=DivSta_r\={}
method.divstd=DivStd
method.divupw=DivUpw
method.droop=DrQ
method.droop.var=DQ{0}
method.hare=HaQ
method.hare.var=HQ{0}
method.residual.grr=grR
method.residual.gr1=gR1
method.residual.wta=WTA
output.can_be_less=-
output.can_be_more=+
output.conditions=Conditions
output.div_interval.div=Divisor Interval
output.div_interval.div_quo=Divisor Interval
output.div_interval.quo=-
output.div_quo.div=Divsor
output.div_quo.div_quo=Divisor/Split
output.div_quo.quo=Split
output.mul.div=Multiplier
output.mul.div_quo=Multiplier
output.mul.quo=-
output.mul_interval.div=Multiplier Interval
output.mul_interval.div_quo=Multiplier Interval
output.mul_interval.quo=-
output.names=Parties
output.quotient=Quotients
output.sum=Sum
output.votes=Votes
output.absolute_majority={0} wins an absolute majority with {1} of {2} votes
output.subapportionment=Subapportionment to the combined list {0}
output.dir=Overhang
output.district=Electoral district {0}\: {1}
output.summary=Summary table\: {0} electoral districts[{1}]
output.super=Superapportionment
output.super_sorted=Superapportionment [sorted]
output.biprop_table=Biproportional divisor method(s) [{0}]
output.pop=Pop^{0}#{1}
output.marker=\u2022

divisorformat.div_split=Divisor | Split
divisorformat.interval=Divisor interval | Split interval
divisorformat.mult=Multiplier
divisorformat.mult_interval=Multiplier interval
divisorformat.quotients=Quotients

orientation.ver=Vertical
orientation.hor=Horizontal
orientation.verhor=Vertical/Horizontal
orientation.horver=Horizontal/Vertical

tieformat.coded=Ties coded +|-
tieformat.list=Tie list, uncoded
tieformat.coded_list=Tie list, coded

warn.enum_key_match_pattern=Enum value {0} does not match its own key.
warn.unknown_value_enum=Illegal Key ({0}) for {1}.



gui.main_window_title = BAZI - {0}

gui.file = File
gui.file.open = Open input
gui.file.reopen = Reopen input
gui.file.save = Save input
gui.file.restart = Restart
gui.file.options = Options
gui.file.quit = Quit

gui.database = Database

gui.help = Help
gui.help.about = About BAZI
gui.help.changelog = Changelog
gui.help.update = Look for updates

gui.seats.label = Seats
gui.seats.tooltip = ...
gui.parties.label = Parties
gui.tooltip.add_district = Add a new district

gui.title = Title
gui.orientation = Orientation
gui.divisor = Divisor
gui.tie = Ties

gui.methods.simple = Simple apportionment
gui.methods.minxp = Min+x%
gui.methods.minxp.aux = {0}%
gui.methods.vpv = VPV(h)
gui.methods.bmm = Base+Min..Max
gui.methods.bmm.aux = {0}+{1}..{2}
gui.methods.bmmp = Base+Min..Max (pow)
gui.methods.bmmp.aux = {0}+{1}..{2}
gui.methods.sep = Seperate Districts
gui.methods.biprop = Biproportional

gui.methods.minxp.info = How many percent should be added to the lists minimum condition?\n\
Note\: Only combined lists will receive the extra percent.

gui.methods.bmm.base = Base:
gui.methods.bmm.min = Min:
gui.methods.bmm.max = Max:
gui.methods.bmm.info = Suppose h seats are shared by l participants.\n\
	\n\
	Base+Min..Max\: With Base set to b, each \
	participant gets b "base seats" ("Grundmandate"). \
	Then BAZI apportions the h-lb "remaining seats" \
	observing the constraints Min and Max as set and \
	using the divisor methods as checked.\n\
	\n\
	Base+Min..Max(Pwr)\: Same as Base+Min..Max, except \
	when it would  allocate to the largest participant \
	more than "Max" seats. Then Base+Min..Max(Pwr) \
	calculates an exponent E such that the largest \
	participant gets exactly Max seats when the inputs \
	p_i are power-weighted into p_i^E. \n\
	\n\
	Note\: In the Max field, infinity is coded by a \
	duplicate lower-case letter oh, "oo".

gui.methods.biprop.info = Coming soon...

gui.methods.var = Variant
gui.methods.hare = {0} (Hamilton{1})
gui.methods.divdwn = DivDwn (Jefferson)
gui.methods.divstd = DivStd (Webster)
gui.methods.divgeo = DivGeo (Hill)
gui.methods.divhar = DivHar (Dean)
gui.methods.divupw = DivUpw (Adams)
gui.methods.divpot = DivPow (Power rounding)
gui.methods.divpot.aux = p\={0} {1}
gui.methods.divsta = DivSta (Stationary ronding)
gui.methods.divsta.aux = r\={0} {1}
gui.methods.droop = {0} (Droop{1})

gui.methods.quota_function = Quota function:
gui.methods.residual_handler = Residual handler\:
gui.methods.hare.info = info...
gui.methods.droop.info = info...

gui.methods.divsta.param=r \=
gui.methods.divsta.exceptions=Ausnahmen\:
gui.methods.divsta.info=info...

gui.methods.divpot.param=p \=
gui.methods.divpot.exceptions=Exceptions\:
gui.methods.divpot.info=info...