import org.apache.tools.ant.filters.ReplaceTokens

def getVersionFromGit = {
	->
	def standard = new ByteArrayOutputStream()
	def error = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'describe', '--tags'
		standardOutput = standard
		errorOutput = error
		ignoreExitValue = true
	}

	if (error.toString().isEmpty())
		return standard.toString().trim()
	else
		return 'SNAPSHOT'
}

println("##teamcity[buildNumber '" + getVersionFromGit() + "']");

apply plugin: 'java'
allprojects {
	version = getVersionFromGit()

	apply plugin: 'java'
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	sourceSets {
		main {
			java {
				srcDirs = [
					'src/main/java/api',
					'src/main/java/impl'
				]
			}
		}
	}

	repositories { mavenCentral() }
	dependencies {
		testCompile 'junit:junit:4.11'
	}

	processResources {
		filter ReplaceTokens, tokens: [
			'version': getVersion(),
			'year'   : Calendar.getInstance().get(Calendar.YEAR).toString()
		]
	}
}

dependencies {
	compile project(':cl')

	runtime project(':divisor')
	runtime project(':list')
	runtime project(':quota')
	runtime project(':json')
	runtime project(':as')

	runtime 'org.slf4j:slf4j-jdk14:1.7.6'
}


buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.github.jengelman.gradle.plugins:shadow:0.8'
	}
}
apply plugin: 'shadow'
shadow {
	outputFile = new File("${project.buildDir}/distributions/", "bazi.jar")
}
jar {
	manifest {
		attributes "Main-Class": "de.uni_augsburg.bazi.cl.BAZI"
	}
}


apply plugin: 'distribution'
distributions {
	main {
		baseName = 'bazi'
		contents {
			filesMatching("**/*.txt") {
				filter ReplaceTokens, tokens: [
					'version': getVersion(),
					'year'   : Calendar.getInstance().get(Calendar.YEAR).toString()
				]
			}
			from 'build/distributions/bazi.jar'
		}
	}
}

shadowJar.dependsOn subprojects.jar
installDist.dependsOn shadowJar
